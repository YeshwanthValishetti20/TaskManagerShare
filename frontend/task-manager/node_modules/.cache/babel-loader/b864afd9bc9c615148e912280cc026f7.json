{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshw\\\\Downloads\\\\saaho-main (3)\\\\saaho-main\\\\frontend\\\\task-manager\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\n// import { React, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import { useNavigate } from 'react-router-dom';\n// // require('dotenv').config()\n// const Signup = () => {\n//     const navigate = useNavigate();\n//     const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", cpassword: \"\" });\n//     const onChange = (e) => {\n//         setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//     }\n//     const onSubmit = async (e) => {\n//         e.preventDefault();\n//         const response = await fetch(`http://localhost:8000/auth/createUser`, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password })\n//         });\n//         const json = await response.json();\n//         console.log(json);\n//         if (json.success) {   //checking if we successfully got the response or not\n//             //saving the auth token and redirecting\n//             localStorage.setItem(\"token\", json.token);  //saving the auth token that we got on logging in the localstorage so that it can be used to fetch the notes of the logged in user\n//             navigate('/');   //redirecting to the home page\n//         }\n//         else {\n//             alert(\"Error\");\n//         }\n//     }\n//     return (\n//         <div>\n//             <div className=\"flex items-center justify-center h-screen bg-no-repeat bg-cover bg-center bg-opacity-50 bg-emerald-100\">\n//                 <div className=\" border shadow-2xl shadow-emerald-900 rounded-lg w-3/5 flex flex-col items-center bg-white my-5\">\n//                     <h4 className=\"text-center font-bold text-2xl my-5 font-serif\">Create Account</h4>\n//                     <form onSubmit={onSubmit} className=\"w-full flex flex-col items-center\">\n//                         <div className=\"flex flex-col items-center w-full\">\n//                             <input type=\"text\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your name\" name='name' onChange={onChange} />\n//                             <input type=\"email\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your email\" name='email' onChange={onChange} />\n//                             <input type=\"password\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your password\" name='password' onChange={onChange} />\n//                             <input type=\"password\" className={`px-3 py-3 outline-none w-4/5 rounded my-5 ${credentials.cpassword !== \"\" && credentials.password !== credentials.cpassword ? \" border-red-600 shadow-sm shadow-red-400 border\" : \"border\"}`} placeholder=\"Confirm your password\" name='cpassword' onChange={onChange} />\n//                             {credentials.cpassword !== \"\" && credentials.password !== credentials.cpassword && <div  className=\"form-text text-red-600\">Confirm password must be same as password</div>}\n//                         </div>\n//                         <button className=\" border bg-teal-500 text-white px-3 py-2 font-extrabold my-4\">SIGN UP</button>\n//                     </form>\n//                     <p className=\"my-3\">Already have an account? <Link className=\"font-bold underline\" to=\"/login\">Login here</Link></p>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n// export default Signup\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n\n  const onChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault(); // Validate the form fields (similar to frontend validation)\n\n    if (credentials.password !== credentials.cpassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      // Send a POST request to create the user\n      const response = await fetch(`http://localhost:8000/auth/createUser`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: credentials.name,\n          email: credentials.email,\n          password: credentials.password\n        })\n      });\n      const json = await response.json();\n\n      if (json.success) {\n        // Display a message to the user indicating that a verification email has been sent\n        alert(\"Verification email sent. Please check your inbox.\"); // Redirect the user to a verification page (you need to define this route in your React Router)\n\n        navigate('/verify');\n      } else {\n        alert(\"Error: \" + json.error);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Error creating user\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"cpassword\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"dWwDCz/Wj5uVvf2L3zt5SlXCR10=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Signup","navigate","credentials","setCredentials","name","email","password","cpassword","onChange","e","target","value","onSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","json","success","error","console"],"sources":["C:/Users/yeshw/Downloads/saaho-main (3)/saaho-main/frontend/task-manager/src/components/Signup.js"],"sourcesContent":["// import { React, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import { useNavigate } from 'react-router-dom';\n// // require('dotenv').config()\n\n// const Signup = () => {\n\n//     const navigate = useNavigate();\n\n//     const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", cpassword: \"\" });\n\n//     const onChange = (e) => {\n//         setCredentials({ ...credentials, [e.target.name]: e.target.value });\n//     }\n\n//     const onSubmit = async (e) => {\n//         e.preventDefault();\n\n\n//         const response = await fetch(`http://localhost:8000/auth/createUser`, {\n//             method: 'POST',\n\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password })\n\n//         });\n\n//         const json = await response.json();\n//         console.log(json);\n\n//         if (json.success) {   //checking if we successfully got the response or not\n//             //saving the auth token and redirecting\n\n//             localStorage.setItem(\"token\", json.token);  //saving the auth token that we got on logging in the localstorage so that it can be used to fetch the notes of the logged in user\n\n//             navigate('/');   //redirecting to the home page\n\n\n//         }\n//         else {\n//             alert(\"Error\");\n//         }\n//     }\n\n\n//     return (\n//         <div>\n//             <div className=\"flex items-center justify-center h-screen bg-no-repeat bg-cover bg-center bg-opacity-50 bg-emerald-100\">\n//                 <div className=\" border shadow-2xl shadow-emerald-900 rounded-lg w-3/5 flex flex-col items-center bg-white my-5\">\n//                     <h4 className=\"text-center font-bold text-2xl my-5 font-serif\">Create Account</h4>\n//                     <form onSubmit={onSubmit} className=\"w-full flex flex-col items-center\">\n//                         <div className=\"flex flex-col items-center w-full\">\n//                             <input type=\"text\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your name\" name='name' onChange={onChange} />\n//                             <input type=\"email\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your email\" name='email' onChange={onChange} />\n//                             <input type=\"password\" className=\"border px-3 py-3 outline-none w-4/5 rounded my-5\" placeholder=\"Enter your password\" name='password' onChange={onChange} />\n\n//                             <input type=\"password\" className={`px-3 py-3 outline-none w-4/5 rounded my-5 ${credentials.cpassword !== \"\" && credentials.password !== credentials.cpassword ? \" border-red-600 shadow-sm shadow-red-400 border\" : \"border\"}`} placeholder=\"Confirm your password\" name='cpassword' onChange={onChange} />\n\n//                             {credentials.cpassword !== \"\" && credentials.password !== credentials.cpassword && <div  className=\"form-text text-red-600\">Confirm password must be same as password</div>}\n\n//                         </div>\n//                         <button className=\" border bg-teal-500 text-white px-3 py-2 font-extrabold my-4\">SIGN UP</button>\n//                     </form>\n//                     <p className=\"my-3\">Already have an account? <Link className=\"font-bold underline\" to=\"/login\">Login here</Link></p>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Signup\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nconst Signup = () => {\n    const navigate = useNavigate();\n    const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", cpassword: \"\" });\n\n    const onChange = (e) => {\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        // Validate the form fields (similar to frontend validation)\n        if (credentials.password !== credentials.cpassword) {\n            alert(\"Passwords do not match\");\n            return;\n        }\n\n        try {\n            // Send a POST request to create the user\n            const response = await fetch(`http://localhost:8000/auth/createUser`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password })\n            });\n\n            const json = await response.json();\n\n            if (json.success) {\n                // Display a message to the user indicating that a verification email has been sent\n                alert(\"Verification email sent. Please check your inbox.\");\n\n                // Redirect the user to a verification page (you need to define this route in your React Router)\n                navigate('/verify');\n            } else {\n                alert(\"Error: \" + json.error);\n            }\n        } catch (error) {\n            console.error(error);\n            alert(\"Error creating user\");\n        }\n    }\n\n    return (\n        <div>\n            <h2>Signup</h2>\n            <form onSubmit={onSubmit}>\n                <div>\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={onChange} />\n                </div>\n                <div>\n                    <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={onChange} />\n                </div>\n                <div>\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={onChange} />\n                </div>\n                <div>\n                    <input type=\"password\" placeholder=\"Confirm Password\" name=\"cpassword\" onChange={onChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">Sign Up</button>\n                </div>\n            </form>\n            <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\n        </div>\n    )\n}\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}